# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
 
  #Контейнер с PHP, назовём его app
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    volumes:
      - ./code:/data/application.local
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
 
  #контейнер с Nginx
  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver    
    volumes:
      - ./code:/data/application.local

    # проброс портов
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
 
  # контейнер с MySQL
  # строим на базе стандартного образа
  db:
    image: mysql  # мы не используем кастомный Dockerfile, поэтому сразу указываем образ
    container_name: db
    ports:
      - "3306:3306"  #порт по умолчанию
    # описываем, какую БД мы создаём
    environment:
      # имена переменных требуемые MySQL
      MYSQL_DATABASE: ${MYSQL_DATABASE} # значение из .env
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # значение из .env
    volumes:
      - ./dbdata:/var/lib/mysql  # /var/lib/mysql путь к БД MySQL по-умолчанию
    networks:
      - app-network
 
#Docker Networks
networks:
  app-network:
    driver: bridge